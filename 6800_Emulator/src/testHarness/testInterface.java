/*
 * Motorola 6800 Emulator
 *
 * testInterface.java
 *
 * David Ketler 3394947
 */

package testHarness;
import java.io.*;
import java.util.StringTokenizer;


public class testInterface extends javax.swing.JFrame {
    _emulator.CPU proc;
    boolean pass = true;
    File file;
    state inState = new state();
    state outState = new state();
    state resultState = new state();
    PrintWriter out;

    /** Creates new form testInterface */
    public testInterface() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        sp_in = new javax.swing.JTextField();
        accb_in = new javax.swing.JTextField();
        flags_in = new javax.swing.JTextField();
        location_in = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        inx_in = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        acca_in = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pc_in = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        instruction_in = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        data_in = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        data2_in = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        sp_out = new javax.swing.JTextField();
        accb_out = new javax.swing.JTextField();
        flags_out = new javax.swing.JTextField();
        location_out = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        inx_out = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        acca_out = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        pc_out = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        instruction_out = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        data_out = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        data2_out = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        passOrFail = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        sp_out1 = new javax.swing.JTextField();
        accb_out1 = new javax.swing.JTextField();
        flags_out1 = new javax.swing.JTextField();
        data_out1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        inx_out1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        acca_out1 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        pc_out1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        instruction_out1 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        location_out1 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        data2_out1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jFileChooser1.setName("jFileChooser1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel1.setName("jPanel1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(_emulator._EmulatorApp.class).getContext().getResourceMap(testInterface.class);
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        sp_in.setText(resourceMap.getString("sp_in.text")); // NOI18N
        sp_in.setName("sp_in"); // NOI18N

        accb_in.setText(resourceMap.getString("accb_in.text")); // NOI18N
        accb_in.setName("accb_in"); // NOI18N

        flags_in.setText(resourceMap.getString("flags_in.text")); // NOI18N
        flags_in.setName("flags_in"); // NOI18N

        location_in.setText(resourceMap.getString("location_in.text")); // NOI18N
        location_in.setName("location_in"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        inx_in.setText(resourceMap.getString("inx_in.text")); // NOI18N
        inx_in.setName("inx_in"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        acca_in.setText(resourceMap.getString("acca_in.text")); // NOI18N
        acca_in.setName("acca_in"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        pc_in.setText(resourceMap.getString("pc_in.text")); // NOI18N
        pc_in.setName("pc_in"); // NOI18N

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        instruction_in.setText(resourceMap.getString("instruction_in.text")); // NOI18N
        instruction_in.setName("instruction_in"); // NOI18N

        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        data_in.setText(resourceMap.getString("data_in.text")); // NOI18N
        data_in.setName("data_in"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        data2_in.setText(resourceMap.getString("data2_in.text")); // NOI18N
        data2_in.setName("data2_in"); // NOI18N

        jLabel34.setText(resourceMap.getString("jLabel34.text")); // NOI18N
        jLabel34.setName("jLabel34"); // NOI18N

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel7))
                                            .addGap(60, 60, 60))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel9)
                                        .addGap(79, 79, 79)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel20)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel34)
                        .addGap(89, 89, 89)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(acca_in, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(instruction_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(accb_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sp_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flags_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inx_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(location_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(data_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(data2_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pc_in, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acca_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(accb_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sp_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(flags_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inx_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(location_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(data_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(data2_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(pc_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(instruction_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setName("jPanel2"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        sp_out.setName("sp_out"); // NOI18N

        accb_out.setName("accb_out"); // NOI18N

        flags_out.setName("flags_out"); // NOI18N

        location_out.setName("location_out"); // NOI18N

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        inx_out.setName("inx_out"); // NOI18N

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel16.setFont(resourceMap.getFont("jLabel16.font")); // NOI18N
        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        acca_out.setName("acca_out"); // NOI18N

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        pc_out.setName("pc_out"); // NOI18N

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        instruction_out.setName("instruction_out"); // NOI18N

        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N

        data_out.setText(resourceMap.getString("data_out.text")); // NOI18N
        data_out.setName("data_out"); // NOI18N

        jLabel32.setText(resourceMap.getString("jLabel32.text")); // NOI18N
        jLabel32.setName("jLabel32"); // NOI18N

        data2_out.setName("data2_out"); // NOI18N

        jTextField2.setName("jTextField2"); // NOI18N

        jLabel35.setText(resourceMap.getString("jLabel35.text")); // NOI18N
        jLabel35.setName("jLabel35"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel16))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel14))
                                .addGap(46, 46, 46))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel32)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel35))))
                                .addGap(4, 4, 4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sp_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(flags_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(inx_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(location_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(data_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(data2_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(pc_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(instruction_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(acca_out, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(accb_out, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acca_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(accb_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sp_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flags_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(data_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inx_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(location_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21)
                        .addGap(5, 5, 5)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(pc_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(data2_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(instruction_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        passOrFail.setFont(resourceMap.getFont("passOrFail.font")); // NOI18N
        passOrFail.setForeground(resourceMap.getColor("passOrFail.foreground")); // NOI18N
        passOrFail.setText(resourceMap.getString("passOrFail.text")); // NOI18N
        passOrFail.setName("passOrFail"); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        jLabel22.setText(resourceMap.getString("jLabel22.text")); // NOI18N
        jLabel22.setName("jLabel22"); // NOI18N

        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setName("jLabel23"); // NOI18N

        sp_out1.setText(resourceMap.getString("sp_out1.text")); // NOI18N
        sp_out1.setName("sp_out1"); // NOI18N

        accb_out1.setText(resourceMap.getString("accb_out1.text")); // NOI18N
        accb_out1.setName("accb_out1"); // NOI18N

        flags_out1.setText(resourceMap.getString("flags_out1.text")); // NOI18N
        flags_out1.setName("flags_out1"); // NOI18N

        data_out1.setText(resourceMap.getString("data_out1.text")); // NOI18N
        data_out1.setName("data_out1"); // NOI18N

        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N

        inx_out1.setText(resourceMap.getString("inx_out1.text")); // NOI18N
        inx_out1.setName("inx_out1"); // NOI18N

        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N

        jLabel26.setText(resourceMap.getString("jLabel26.text")); // NOI18N
        jLabel26.setName("jLabel26"); // NOI18N

        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setName("jLabel27"); // NOI18N

        jLabel28.setFont(resourceMap.getFont("jLabel28.font")); // NOI18N
        jLabel28.setText(resourceMap.getString("jLabel28.text")); // NOI18N
        jLabel28.setName("jLabel28"); // NOI18N

        acca_out1.setText(resourceMap.getString("acca_out1.text")); // NOI18N
        acca_out1.setName("acca_out1"); // NOI18N

        jLabel29.setText(resourceMap.getString("jLabel29.text")); // NOI18N
        jLabel29.setName("jLabel29"); // NOI18N

        pc_out1.setText(resourceMap.getString("pc_out1.text")); // NOI18N
        pc_out1.setName("pc_out1"); // NOI18N

        jLabel30.setText(resourceMap.getString("jLabel30.text")); // NOI18N
        jLabel30.setName("jLabel30"); // NOI18N

        instruction_out1.setText(resourceMap.getString("instruction_out1.text")); // NOI18N
        instruction_out1.setName("instruction_out1"); // NOI18N

        jLabel31.setText(resourceMap.getString("jLabel31.text")); // NOI18N
        jLabel31.setName("jLabel31"); // NOI18N

        location_out1.setText(resourceMap.getString("location_out1.text")); // NOI18N
        location_out1.setName("location_out1"); // NOI18N

        jLabel33.setText(resourceMap.getString("jLabel33.text")); // NOI18N
        jLabel33.setName("jLabel33"); // NOI18N

        data2_out1.setText(resourceMap.getString("data2_out1.text")); // NOI18N
        data2_out1.setName("data2_out1"); // NOI18N

        jTextField3.setName("jTextField3"); // NOI18N

        jLabel36.setText(resourceMap.getString("jLabel36.text")); // NOI18N
        jLabel36.setName("jLabel36"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel33)
                                    .addComponent(jLabel23)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel36)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField3)
                            .addComponent(pc_out1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(data2_out1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(data_out1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(location_out1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inx_out1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(flags_out1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sp_out1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(accb_out1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(acca_out1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(instruction_out1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acca_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26)
                    .addComponent(accb_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sp_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flags_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inx_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(location_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(data_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(data2_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pc_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(instruction_out1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)))
        );

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(passOrFail, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(123, 123, 123))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(passOrFail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(333, 333, 333))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //test
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        fileParser f = new fileParser();

        inState.ACCA = f.parseHex(this.acca_in.getText(),this.acca_in.getText().length());
        inState.ACCB = f.parseHex(this.accb_in.getText(),this.accb_in.getText().length());
        inState.SP = f.parseHex(this.sp_in.getText(),this.sp_in.getText().length());
        inState.FLAGS = f.parseHex(this.flags_in.getText(),this.flags_in.getText().length());
        inState.INX = f.parseHex(this.inx_in.getText(),this.inx_in.getText().length());
        inState.memoryLocation = f.parseHex(this.location_in.getText(),this.location_in.getText().length());
        inState.data1 = f.parseHex(this.data_in.getText(),this.data_in.getText().length());
        inState.data2 = f.parseHex(this.data2_in.getText(),this.data2_in.getText().length());
        inState.PC = f.parseHex(this.pc_in.getText(),this.pc_in.getText().length());
        inState.instruction = f.parseHex(this.instruction_in.getText(),this.instruction_in.getText().length());
        inState.operand = f.parseHex(this.jTextField1.getText(), this.jTextField1.getText().length());
        resultState = proc.test(inState);

        //write the output into the interface
        acca_out1.setText("0x" +Integer.toHexString(resultState.ACCA));
        accb_out1.setText("0x" +Integer.toHexString(resultState.ACCB));
        sp_out1.setText("0x" +Integer.toHexString(resultState.SP));
        flags_out1.setText("0x" +Integer.toHexString(resultState.FLAGS));
        inx_out1.setText("0x" +Integer.toHexString(resultState.INX));
        data_out1.setText("0x" +Integer.toHexString(resultState.data1));
        location_out1.setText("0x" +Integer.toHexString(resultState.memoryLocation));
        data2_out1.setText("0x" +Integer.toHexString(resultState.data2));
        pc_out1.setText("0x" +Integer.toHexString(resultState.PC));
        instruction_out1.setText("0x" +Integer.toHexString(inState.instruction));

        if(acca_out.getText().compareTo(acca_out1.getText()) != 0)
            pass = false;
        else if(accb_out.getText().compareTo(accb_out1.getText()) != 0)
            pass = false;
        else if(sp_out.getText().compareTo(sp_out1.getText()) != 0)
            pass = false;
        else if(flags_out.getText().compareTo(flags_out1.getText()) != 0)
            pass = false;
        else if(inx_out.getText().compareTo(inx_out1.getText()) != 0)
            pass = false;
        else if(location_out.getText().compareTo(data_out1.getText()) != 0)
            pass = false;
        else if(data_out.getText().compareTo(location_out1.getText()) != 0)
            pass = false;
        else if(data2_out.getText().compareTo(data2_out1.getText()) != 0)
            pass = false;
        else if(pc_out.getText().compareTo(pc_out1.getText()) != 0)
            pass = false;
        else
            pass = true;

        if(pass)
            passOrFail.setText("Test PASSED");
        else
            passOrFail.setText("Test FAILED");
    }//GEN-LAST:event_jButton1ActionPerformed

    //save the test file
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            jFileChooser1.setApproveButtonText("Save");
            int returnVal = jFileChooser1.showOpenDialog(this);
            file = jFileChooser1.getSelectedFile();
            fileParser parse = new fileParser();
            save();
       }
       catch(Exception e) { }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    //load
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            jFileChooser1.setApproveButtonText("Open");
            int returnVal = jFileChooser1.showOpenDialog(this);
            file = jFileChooser1.getSelectedFile();
            String t;
            fileParser f = new fileParser();

            BufferedReader in
                    = new BufferedReader(new FileReader(file));

            in.readLine(); //eat the heading
            in.readLine(); //eat first line
            in.readLine(); //eat the titles
            in.readLine(); //eat the separating line
            StringTokenizer st = new StringTokenizer(in.readLine());

            t = st.nextToken();
            t = st.nextToken(); //eat the leading pipe
            inState.ACCA = f.parseHex(t, t.length());
            t = st.nextToken(); t = st.nextToken(); //eat the leading pipe
            inState.ACCB = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            inState.SP = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            inState.FLAGS = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            inState.INX = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            inState.memoryLocation = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            inState.data1 = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            inState.data2 = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            inState.PC = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            inState.instruction = f.parseHex(t, t.length());

            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.ACCA = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.ACCB = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.SP = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.FLAGS = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.INX = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.memoryLocation = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.data1 = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.data2 = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.PC = f.parseHex(t, t.length());
            t = st.nextToken();t = st.nextToken(); //eat the leading pipe
            outState.instruction = f.parseHex(t, t.length());

            in.readLine(); //eat the separating line

            //write states into the interface
            acca_in.setText("0x" + Integer.toHexString(inState.ACCA));
            accb_in.setText("0x" + Integer.toHexString(inState.ACCB));
            sp_in.setText("0x" + Integer.toHexString(inState.SP));
            flags_in.setText("0x" + Integer.toHexString(inState.FLAGS));
            inx_in.setText("0x" + Integer.toHexString(inState.INX));
            data_in.setText("0x" + Integer.toHexString(inState.data1));
            location_in.setText("0x" + Integer.toHexString(inState.memoryLocation));
            data2_in.setText("0x" + Integer.toHexString(inState.data2));
            pc_in.setText("0x" + Integer.toHexString(inState.PC));
            instruction_in.setText("0x" + Integer.toHexString(inState.instruction));

            acca_out.setText("0x" + Integer.toHexString(outState.ACCA));
            accb_out.setText("0x" + Integer.toHexString(outState.ACCB));
            sp_out.setText("0x" + Integer.toHexString(outState.SP));
            flags_out.setText("0x" + Integer.toHexString(outState.FLAGS));
            inx_out.setText("0x" + Integer.toHexString(outState.INX));
            data_out.setText("0x" + Integer.toHexString(outState.data1));
            location_out.setText("0x" + Integer.toHexString(outState.memoryLocation));
            data2_out.setText("0x" + Integer.toHexString(outState.data2));
            pc_out.setText("0x" + Integer.toHexString(outState.PC));
            instruction_out.setText("0x" + Integer.toHexString(outState.instruction));


            in.close();
            proc.updated = true;
       }
       catch(Exception e) { }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        append(out);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        testAll(file);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new testInterface().setVisible(true);
            }
        });
    }

    public void setCPU(_emulator.CPU processor) {
        proc = processor;
    }

    private void save() {
        try {
            out = new PrintWriter(new BufferedWriter(new FileWriter(file)));
            out.print("                                         START        "
                    + "                                        "
                    + "           EXPECTED END    "
                    + "                "
                    + "                         "
                    + "                                  RESULT");
            out.println();
            out.print(" ----------------------------------------------------"
                    + "------------------------------------------------------"
                    + "--------------------------------------------------------"
                    + "------------------------------------------------"
                    + "------------------------------------------ ");
            out.println();

            out.print("| ACCA  | ");
            out.print("ACCB  | ");
            out.print("SP    | ");
            out.print("CC    | ");
            out.print("INX   | ");
            out.print("LOC   | ");
            out.print("D1    | ");
            out.print("D2    | ");
            out.print("PC    | ");
            out.print("INS   | ");
            out.print(" ACCA | ");
            out.print(" ACCB | ");
            out.print("SP    | ");
            out.print("CC    | ");
            out.print("INX   | ");
            out.print("LOC   | ");
            out.print("D1    | ");
            out.print("D2    | ");
            out.print("PC    | ");
            out.print("INS   | ");
            out.print(" ACCA | ");
            out.print(" ACCB | ");
            out.print("SP    | ");
            out.print("CC    | ");
            out.print("INX   | ");
            out.print("LOC   | ");
            out.print("D1    | ");
            out.print("D2    | ");
            out.print("PC    | ");
            out.print("INS   | ");
            out.print("PASS/FAIL |");
            out.println();

            out.print(" -------+-------+-------+-------+-------+-------+----"
                    + "---+-------+-------+-------+-------+-------+-------+--"
                    + "-----+-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+------------ ");
            out.println();

            out.print("| ");
            out.print(acca_in.getText());
            pad(acca_in.getText(),out);
            out.print(accb_in.getText());
            pad(accb_in.getText(),out);
            out.print(sp_in.getText());
            pad(sp_in.getText(),out);
            out.print(flags_in.getText());
            pad(flags_in.getText(),out);
            out.print(inx_in.getText());
            pad(inx_in.getText(),out);
            out.print(location_in.getText());
            pad(location_in.getText(),out);
            out.print(data_in.getText());
            pad(data_in.getText(),out);
            out.print(data2_in.getText());
            pad(data2_in.getText(),out);
            out.print(pc_in.getText());
            pad(pc_in.getText(),out);
            out.print(instruction_in.getText());
            pad(instruction_in.getText(),out);

            out.print(acca_out.getText());
            pad(acca_out.getText(),out);
            out.print(accb_out.getText());
            pad(accb_out.getText(),out);
            out.print(sp_out.getText());
            pad(sp_out.getText(),out);
            out.print(flags_out.getText());
            pad(flags_out.getText(),out);
            out.print(inx_out.getText());
            pad(inx_out.getText(),out);
            out.print(location_out.getText());
            pad(location_out.getText(),out);
            out.print(data_out.getText());
            pad(data_out.getText(),out);
            out.print(data2_out.getText());
            pad(data2_out.getText(),out);
            out.print(pc_out.getText());
            pad(pc_out.getText(),out);
            out.print(instruction_out.getText());
            pad(instruction_out.getText(),out);


            if (acca_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(acca_out1.getText());
                pad(acca_out1.getText(), out);
            }
            if (accb_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(accb_out1.getText());
                pad(accb_out1.getText(), out);
            }
            if (sp_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(sp_out1.getText());
                pad(sp_out1.getText(), out);
            }
            if (flags_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(flags_out1.getText());
                pad(flags_out1.getText(), out);
            }
            if (inx_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(inx_out1.getText());
                pad(inx_out1.getText(), out);
            }
            if (location_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(location_out1.getText());
                pad(location_out1.getText(), out);
            }
            if (data_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(data_out1.getText());
                pad(data_out1.getText(), out);
            }
            if (data2_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(data2_out1.getText());
                pad(data2_out1.getText(), out);
            }
            if (pc_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(pc_out1.getText());
                pad(pc_out1.getText(), out);
            }
            if (instruction_out1.getText().isEmpty()) {
                out.print("0x0");
                pad("0x0", out);
            } else {
                out.print(instruction_out1.getText());
                pad(instruction_out1.getText(), out);
            }

            out.print("NT        |");
            out.println();

            out.print(" -------+-------+-------+-------+-------+-------+----"
                    + "---+-------+-------+-------+-------+-------+-------+--"
                    + "-----+-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+------------ ");
            out.println();
            out.flush();

            proc.updated = true;
        }
        catch(Exception e) {}
    }

    static public void pad(String s, PrintWriter f) {
       for(int i = 0; i < (6 - s.length()); i++)
                f.print(" ");
       f.print("| ");
    }

    public void append(PrintWriter out) {
            try{
                out = new PrintWriter(new BufferedWriter(new FileWriter(file,true)));

            }
            catch(Exception e) {}

        out.print("| ");
        out.print(acca_in.getText());
        pad(acca_in.getText(), out);
        out.print(accb_in.getText());
        pad(accb_in.getText(), out);
        out.print(sp_in.getText());
        pad(sp_in.getText(), out);
        out.print(flags_in.getText());
        pad(flags_in.getText(), out);
        out.print(inx_in.getText());
        pad(inx_in.getText(), out);
        out.print(location_in.getText());
        pad(location_in.getText(), out);
        out.print(data_in.getText());
        pad(data_in.getText(), out);
        out.print(data2_in.getText());
        pad(data2_in.getText(), out);
        out.print(pc_in.getText());
        pad(pc_in.getText(), out);
        out.print(instruction_in.getText());
        pad(instruction_in.getText(), out);

        out.print(acca_out.getText());
        pad(acca_out.getText(), out);
        out.print(accb_out.getText());
        pad(accb_out.getText(), out);
        out.print(sp_out.getText());
        pad(sp_out.getText(), out);
        out.print(flags_out.getText());
        pad(flags_out.getText(), out);
        out.print(inx_out.getText());
        pad(inx_out.getText(), out);
        out.print(location_out.getText());
        pad(location_out.getText(), out);
        out.print(data_out.getText());
        pad(data_out.getText(), out);
        out.print(data2_out.getText());
        pad(data2_out.getText(), out);
        out.print(pc_out.getText());
        pad(pc_out.getText(), out);
        out.print(instruction_out.getText());
        pad(instruction_out.getText(), out);

        if(acca_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(acca_out1.getText());
        pad(acca_out1.getText(), out); }
        if(accb_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(accb_out1.getText());
        pad(accb_out1.getText(), out);}
        if(sp_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(sp_out1.getText());
        pad(sp_out1.getText(), out);}
        if(flags_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(flags_out1.getText());
        pad(flags_out1.getText(), out);}
        if(inx_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(inx_out1.getText());
        pad(inx_out1.getText(), out); }
        if(location_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(location_out1.getText());
        pad(location_out1.getText(), out); }
        if(data_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(data_out1.getText());
        pad(data_out1.getText(), out); }
        if(data2_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(data2_out1.getText());
        pad(data2_out1.getText(), out); }
        if(pc_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(pc_out1.getText());
        pad(pc_out1.getText(), out); }
        if(instruction_out1.getText().isEmpty()) {
            out.print("0x0");
            pad("0x0",out);
        }
        else {
        out.print(instruction_out1.getText());
        pad(instruction_out1.getText(), out);}

        

        out.print("NT        |");
        out.println();

        out.print(" -------+-------+-------+-------+-------+-------+----"
                    + "---+-------+-------+-------+-------+-------+-------+--"
                    + "-----+-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+------------ ");
        out.println();

        out.flush();
    }//append

    private void testAll(File file) {
        String s;
        String t;
        fileParser f = new fileParser();
        File fi = new File(file.getAbsolutePath() +"out");

        try {
            BufferedReader in
                    = new BufferedReader(new FileReader(file));
            out = new PrintWriter(new BufferedWriter(new FileWriter(fi)));

            out.print("                                         START        "
                    + "                                        "
                    + "           EXPECTED END    "
                    + "                "
                    + "                         "
                    + "                                  RESULT");
            out.println();

            out.print(" ----------------------------------------------------"
                    + "------------------------------------------------------"
                    + "--------------------------------------------------------"
                    + "------------------------------------------------"
                    + "------------------------------------------ ");
            out.println();

            out.print("| ACCA  | ");
            out.print("ACCB  | ");
            out.print("SP    | ");
            out.print("CC    | ");
            out.print("INX   | ");
            out.print("LOC   | ");
            out.print("D1    | ");
            out.print("D2    | ");
            out.print("PC    | ");
            out.print("INS   | ");
            out.print(" ACCA | ");
            out.print(" ACCB | ");
            out.print("SP    | ");
            out.print("CC    | ");
            out.print("INX   | ");
            out.print("LOC   | ");
            out.print("D1    | ");
            out.print("D2    | ");
            out.print("PC    | ");
            out.print("INS   | ");
            out.print(" ACCA | ");
            out.print(" ACCB | ");
            out.print("SP    | ");
            out.print("CC    | ");
            out.print("INX   | ");
            out.print("LOC   | ");
            out.print("D1    | ");
            out.print("D2    | ");
            out.print("PC    | ");
            out.print("INS   | ");
            out.print("PASS/FAIL |");
            out.println();

            out.print(" -------+-------+-------+-------+-------+-------+----"
                    + "---+-------+-------+-------+-------+-------+-------+--"
                    + "-----+-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+------------ ");
            out.println();

            out.flush();

            in.readLine(); //eat the heading
            in.readLine(); //eat first line
            in.readLine(); //eat the titles
            in.readLine(); //eat the separating line

            while((s = in.readLine()) != null) {

                StringTokenizer st = new StringTokenizer(s);

                t = st.nextToken(); t = st.nextToken(); //eat the leading pipe
                inState.ACCA = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                inState.ACCB = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                inState.SP = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                inState.FLAGS = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe;
                inState.INX = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                inState.memoryLocation = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                inState.data1 = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                inState.data2 = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                inState.PC = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                inState.instruction = f.parseHex(t, t.length());

                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.ACCA = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.ACCB = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.SP = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.FLAGS = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.INX = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.memoryLocation = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.data1 = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.data2 = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.PC = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                outState.instruction = f.parseHex(t, t.length());

                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.ACCA = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.ACCB = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.SP = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.FLAGS = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.INX = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.memoryLocation = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.data1 = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.data2 = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.PC = f.parseHex(t, t.length());
                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                resultState.instruction = f.parseHex(t, t.length());

                t = st.nextToken();t = st.nextToken(); //eat the leading pipe
                //P or F

                resultState = proc.test(inState);

                if (outState.ACCA != resultState.ACCA) {
                    pass = false;
                } else if (outState.ACCB != resultState.ACCB) {
                    pass = false;
                } else if (outState.SP != resultState.SP) {
                    pass = false;
                } else if (outState.FLAGS != resultState.FLAGS) {
                    pass = false;
                } else if (outState.INX != resultState.INX) {
                    pass = false;
                } else if (outState.memoryLocation != resultState.memoryLocation) {
                    pass = false;
                } else if (outState.data1 != resultState.data1) {
                    pass = false;
                } else if (outState.data2 != resultState.data2) {
                    pass = false;
                } else if (outState.PC != resultState.PC) {
                    pass = false;
                } else {
                    pass = true;
                }

                out.print("| ");
                inState.write(out);
                outState.write(out);
                resultState.write(out);

                if (pass) {
                    out.print("P         |");
                } else {
                    out.print("F         |");
                }
                out.println();

                out.print(" -------+-------+-------+-------+-------+-------+----"
                    + "---+-------+-------+-------+-------+-------+-------+--"
                    + "-----+-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+-------+-------+-------+-------+-------+"
                    + "-------+-------+------------ ");
                out.println();

                in.readLine(); //eat row separator
            }//loop
            out.flush();
            out.close();
        }
        catch(Exception e) { System.out.println(e.toString()); }
    }//testAll

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField acca_in;
    private javax.swing.JTextField acca_out;
    private javax.swing.JTextField acca_out1;
    private javax.swing.JTextField accb_in;
    private javax.swing.JTextField accb_out;
    private javax.swing.JTextField accb_out1;
    private javax.swing.JTextField data2_in;
    private javax.swing.JTextField data2_out;
    private javax.swing.JTextField data2_out1;
    private javax.swing.JTextField data_in;
    private javax.swing.JTextField data_out;
    private javax.swing.JTextField data_out1;
    private javax.swing.JTextField flags_in;
    private javax.swing.JTextField flags_out;
    private javax.swing.JTextField flags_out1;
    private javax.swing.JTextField instruction_in;
    private javax.swing.JTextField instruction_out;
    private javax.swing.JTextField instruction_out1;
    private javax.swing.JTextField inx_in;
    private javax.swing.JTextField inx_out;
    private javax.swing.JTextField inx_out1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField location_in;
    private javax.swing.JTextField location_out;
    private javax.swing.JTextField location_out1;
    private javax.swing.JLabel passOrFail;
    private javax.swing.JTextField pc_in;
    private javax.swing.JTextField pc_out;
    private javax.swing.JTextField pc_out1;
    private javax.swing.JTextField sp_in;
    private javax.swing.JTextField sp_out;
    private javax.swing.JTextField sp_out1;
    // End of variables declaration//GEN-END:variables

}
